<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.dgit.bigdata.mybatis_dev.mappers.StudentMapper">
	
	<select id="findStudentById" parameterType="int" resultType="Student">
		select stud_id, name, email, dob from students where stud_id=#{sutdId}
	</select>
	
	<insert id="insertStudent" parameterType="Student">
		insert into students(stud_id, name, email, phone, dob)
		values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</insert>
	
	<insert id="insertStudentAutoIncrement" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
		insert into students(name, email, phone, dob)
		values(#{name}, #{email}, #{phone}, #{dob})
	</insert>
	
	<update id="updateStudent" parameterType="Student">
		update students set name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob}
		where stud_id=#{studId}
	</update>
	
	<delete id="deleteStudent" parameterType="int">
		delete from students where stud_id=#{sutdId}
	</delete>
	
	<select id="findAllStudent" resultType="Student">
		select stud_id as studId, name, email, phone, dob
		from students;
	</select>
	
	
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="sutd_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<select id="findAllStudentsForResultMap" resultMap="StudentResult">
		select stud_id, name, email, phone, dob
		from students;
	</select>
	
	<select id="findStudentByIdForResultMap" resultMap="StudentResult">
		select stud_id, name, email, phone, dob
		from students
		where stud_id=#{studId}
	</select>
	
	<select id="findAllStudentsForHashMap" resultType="map">
		select stud_id, name, email, phone, dob
		from students;
	</select>
	
	<select id="findStudentByIdForHashMap" resultType="map" parameterType="int">
		select stud_id, name, email, phone, dob
		from students
		where stud_id=#{studId};
	</select>
	
	<resultMap type="Student" id="studentWithAddressResult" extends="StudentResult">
		<result property="address.addrId" column="addr_id"/>
		<result property="address.street" column="street"/>
		<result property="address.city" column="city"/>
		<result property="address.state" column="state"/>
		<result property="address.zip" column="zip"/>
		<result property="address.country" column="country"/>
	</resultMap>
	
	<select id="findStudentByIdForresultMapExtend" resultMap="studentWithAddressResult" parameterType="int">
		select stud_id, name, email, phone, a.addr_id, street, city, state, zip, country
		from students s left outer join addresses a on s.addr_id = a.addr_id
		where stud_id = #{studId}
	</select>
</mapper>